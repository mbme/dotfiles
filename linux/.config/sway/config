# Variables
set $mod Mod4
set $font pango:Ubuntu Mono 11
set $border 5


# Theme: solarized
set  $c_active      #268bd2
set  $c_inactive    #859900
set  $c_background  #073642
set  $c_text        #eee8d5
set  $c_urgent      #cb4b16


# Input configuration
input type:keyboard {
    xkb_layout us,ua(winkeys)
    xkb_options grp:rctrl_toggle,grp_led:caps,caps:escape
}
input type:touchpad {
    scroll_factor 0.6
    dwt enabled
    click_method clickfinger
    tap enabled
    natural_scroll disabled
}


# Output configuration
output * background #002B36 solid_color

xwayland enable

font $font

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym --to-code $mod+q kill

# enter fullscreen mode for the focused container
bindsym --to-code $mod+Mod1+f fullscreen

# change focus
bindsym --to-code $mod+h focus left
bindsym --to-code $mod+j focus down
bindsym --to-code $mod+k focus up
bindsym --to-code $mod+l focus right

# move focused window
bindsym --to-code $mod+Shift+h move left
bindsym --to-code $mod+Shift+j move down
bindsym --to-code $mod+Shift+k move up
bindsym --to-code $mod+Shift+l move right

# split in horizontal orientation
bindsym --to-code $mod+Shift+g split h
# split in vertical orientation
bindsym --to-code $mod+Shift+v split v
# change container layout (stacked, tabbed, toggle split)
bindsym --to-code $mod+Shift+s layout stacking
bindsym --to-code $mod+Shift+w layout tabbed
bindsym --to-code $mod+Shift+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+Mod1+space focus mode_toggle # Alt
# toggle sticy
bindsym --to-code $mod+Shift+p sticky toggle

# focus the parent container
bindsym --to-code $mod+Shift+a focus parent
# focus the child container
bindsym --to-code $mod+Shift+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# Move the current workspace to the next output
# (effectively toggles when you only have two outputs)
bindsym --to-code $mod+Shift+x move workspace to output right

# reload the configuration file
bindsym --to-code $mod+Shift+r reload
bindsym --to-code $mod+Shift+q exec mb-exit

# go to prev workspace
bindsym $mod+Tab workspace back_and_forth

# resize window (you can also use the mouse for that)
mode "resize" {
     # These bindings trigger as soon as you enter the resize mode

     # Pressing left will shrink the window’s width.
     # Pressing right will grow the window’s width.
     # Pressing up will shrink the window’s height.
     # Pressing down will grow the window’s height.
     bindsym --to-code j resize shrink width 10 px or 10 ppt
     bindsym --to-code k resize grow height 10 px or 10 ppt
     bindsym --to-code l resize shrink height 10 px or 10 ppt
     bindsym semicolon resize grow width 10 px or 10 ppt

     # same bindings, but for the arrow keys
     bindsym Left resize shrink width 10 px or 10 ppt
     bindsym Down resize grow height 10 px or 10 ppt
     bindsym Up resize shrink height 10 px or 10 ppt
     bindsym Right resize grow width 10 px or 10 ppt

     # back to normal: Enter or Escape
     bindsym Return mode "default"
     bindsym Escape mode "default"
}

bindsym --to-code $mod+r mode "resize"

# toggle waybar
bindsym $mod+grave exec killall -SIGUSR1 waybar

bar {
    swaybar_command waybar
}

focus_follows_mouse            no
popup_during_fullscreen        smart
workspace_auto_back_and_forth  no
default_orientation            horizontal
workspace_layout               tabbed
mouse_warping                  none
focus_on_window_activation     urgent

titlebar_padding 5 1
default_border normal $border
default_floating_border normal  $border
hide_edge_borders --i3 smart


#class                   border         backgr         text     indicator
client.focused           $c_active      $c_active      $c_text  $c_active
client.focused_inactive  $c_inactive    $c_inactive    $c_text  $c_inactive
client.unfocused         $c_background  $c_background  $c_text  $c_background
client.urgent            $c_urgent      $c_urgent      $c_text  $c_urgent

assign [app_id="firefox"] 2

assign [class="^jetbrains-idea"] 3
assign [class="^jetbrains-webstorm"] 3

assign [class="Chromium"] 4
assign [class="chromium"] 4
assign [class="Chrome"] 4
assign [class="Google-chrome-beta"] 4
assign [class="Google-chrome"] 4
assign [class="/usr/bin/chromium-continuous-bin"] 4

assign [class="Steam"] 5

assign [class="Skype"] 7
assign [class="TelegramDesktop"] 7
assign [class="Slack"] 7
assign [class="discord"] 7
assign [class="Franz"] 7
assign [class="Pidgin"] 7
assign [class="Gitter"] 7
assign [class="HipChat"] 7

assign [app_id="liferea"]  8
assign [class="Thunderbird" instance="Mail"] 8
assign [app_id="thunderbird"] 8

assign [app_id="transmission-gtk"]  9
assign [class="Quodlibet"]  9


# browser pop-ups
for_window [window_role="^pop-up"] floating enable
for_window [window_type="dialog"]  floating enable
for_window [window_type="menu"]    floating enable

for_window [class="^firefox"] floating enable
for_window [class="^firefox" instance="Navigator"] floating disable, border pixel $border
for_window [window_role="PictureInPicture"] floating enable, sticky enable, border pixel $border
for_window [app_id="firefox"] border pixel $border
for_window [app_id="firefox" title="Picture-in-Picture"] floating enable, sticky enable, border pixel $border

for_window [class="^Chromium"] border pixel $border
for_window [class="^chromium"] border pixel $border
for_window [class="^Google-chrome"] border pixel $border
for_window [class="^Google-chrome-beta"] border pixel $border
for_window [class="^/usr/bin/chromium-continuous-bin"] border pixel $border
for_window [class="^/usr/bin/chromium-continuous-bin" title="^Developer Tools"] floating disable, border pixel $border

for_window [class="^Emacs"] border pixel $border
for_window [app_id="Emacs"] border pixel $border

for_window [class="Steam"] border pixel $border
for_window [class="^Steam" title="Steam - News"] floating enable

for_window [class="^Franz"] border pixel $border
for_window [class="^Peek"] floating enable
for_window [class="^Slack"] border pixel $border

for_window [class="^Thunderbird" instance="Calendar"] floating enable
for_window [class="^Thunderbird" instance="Msgcompose"] floating enable
for_window [class="^Thunderbird"] border pixel $border
for_window [app_id="thunderbird"] border pixel $border

for_window [class="^jetbrains-idea"]     border pixel $border
for_window [class="^jetbrains-webstorm"] border pixel $border

for_window [app_id="liferea"]   border pixel $border
for_window [app_id="gsimplecal"] border pixel $border
for_window [app_id="org.pwmt.zathura"] border pixel $border
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="wdisplays"] floating enable
for_window [class="^Wine"]        floating enable
for_window [class="^Workrave"]    floating enable
for_window [class="^Mojosetup"]   floating enable # GOG installer
for_window [app_id="safeeyes"]    floating enable 
for_window [class="^Gcolor3"]     floating enable
for_window [class="^Vncviewer"]   floating enable
for_window [class="^Remmina"]     floating enable
for_window [class="^dota_linux"]  floating enable
for_window [app_id="nm-connection-editor"]  floating enable
for_window [class="^Gtk-recordMyDesktop"] floating enable
# for_window [class="^Termite"]     floating enable

for_window [class="^Gnome-calculator"] floating enable border pixel $border
for_window [class="^Gcr-prompter"]     floating enable
for_window [class="^File-roller"]      floating enable border pixel $border

for_window [class="^Chrome" title="^Developer Tools.*"] floating disable, move to workspace 5
for_window [window_role="^bubble$"] floating enable


# KEYBINDINGS

# Increase volume
bindsym --locked XF86AudioRaiseVolume exec mb-audio speakers up
bindsym $mod+Prior exec mb-audio speakers up # win-pageup

# Decrease volume
bindsym --locked XF86AudioLowerVolume exec mb-audio speakers down
bindsym $mod+Next exec mb-audio speakers down # win-pagedown

# Toggle mute
bindsym --locked XF86AudioMute exec mb-audio speakers toggle

# Toggle mute microphone
bindsym Shift+XF86AudioMute exec mb-audio -n mic toggle
bindsym XF86AudioMicMute exec mb-audio -n mic toggle

# Toggle touchpad
bindsym XF86TouchpadToggle exec mb-touchpad -n toggle
bindsym $mod+F9 exec mb-touchpad -n toggle

# increase backlight
bindsym XF86MonBrightnessUp exec mb-backlight inc
bindsym $mod+F8 exec mb-backlight inc

# decrease backlight
bindsym XF86MonBrightnessDown exec mb-backlight dec
bindsym $mod+F7 exec mb-backlight dec

# terminal
bindsym $mod+Return exec mb-terminal

# app runner
bindsym $mod+F1 exec wofi --show=run -i
bindsym --to-code $mod+p exec wofi --show=drun -i

# Mako - notification daemon 
bindsym $mod+Escape exec makoctl dismiss
bindsym $mod+Shift+Escape exec makoctl dismiss --all

# screenshot
bindsym --release Print exec mb-screenshot

# file manager
bindsym --to-code $mod+n exec mb-terminal -e nnn

# clipboard manager
bindsym --to-code $mod+i exec clipman pick --tool="wofi" --max-items=30 --histpath="~/.local/share/clipman.json" --notify
bindsym --to-code $mod+Shift+i exec clipman pick --tool="wofi" --max-items=30 --histpath="~/.local/share/clipman-primary.json" --notify
bindsym --to-code $mod+Mod1+i exec clipman clear --all

# editor
bindsym --to-code $mod+e exec alacritty -t Emacs --class Emacs -e emacs -nw

# AUTOSTART

exec_always wmname Sawfish
exec_always xrdb -merge ~/.Xresources
exec_always ~/.config/sway/kanshi.sh

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY
exec dbus-update-activation-environment --systemd DISPLAY MOZ_DBUS_REMOTE

exec ~/.config/sway/polkit.sh

# turn off screen in 10min
exec swayidle -w \
    timeout 600 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' 

exec wl-paste -t text --watch clipman store --max-items=30 --histpath="~/.local/share/clipman.json"
exec wl-paste -p -t text --watch clipman store -P --max-items=30 --histpath="~/.local/share/clipman-primary.json"

exec nm-applet --indicator
exec blueman-tray
exec gammastep -l 49.842957:24.031111
exec safeeyes
exec udiskie --appindicator

# GTK3 settings
exec_always {
    gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita'
    gsettings set org.gnome.desktop.interface icon-theme 'Papirus'
    gsettings set org.gnome.desktop.interface cursor-theme 'Simple-and-Soft'
    gsettings set org.gnome.desktop.interface font-name 'DejaVu Sans Bold Semi-Condensed 12'

    # allow to run GUI programs as a root
    xhost si:localuser:root
}
