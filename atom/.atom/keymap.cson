# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'atom-workspace':
  'f4': 'atom-terminal:open'
  'shift-f4': 'atom-terminal:open-project-root'

  'f12': 'window:toggle-menu-bar'

  'alt-1': 'tree-view:toggle'
  'alt-2': 'unset!'
  'alt-3': 'unset!'
  'alt-4': 'unset!'
  'alt-5': 'unset!'
  'alt-6': 'unset!'
  'alt-7': 'unset!'
  'alt-8': 'unset!'
  'alt-9': 'unset!'


  'alt-r': 'recent-finder:toggle'
  'alt-f': 'fuzzy-finder:toggle-file-finder'
  'alt-b': 'fuzzy-finder:toggle-buffer-finder'
  'alt-i': 'symbols-view:toggle-file-symbols'
  'alt-I': 'symbols-view:toggle-project-symbols'
  'alt-p': 'command-palette:toggle'

  'alt-]': 'pane:show-next-item'
  'alt-[': 'pane:show-previous-item'

'atom-text-editor':
  'alt-b': 'unset!'
  'alt-f': 'unset!'
